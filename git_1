# How to use Git

# Set up identity
git config --global user.name "minhhai"
git config --global user.email "mn455@cornell.edu"

# Set up default editor to Sublime Text
git config --global core.editor subl

# Check the settings
git config --list

# See the local config file
cat .git/config

# Clone an existing project online
git clone https://github.com/minhhaiphys/xyz.git <new directory name>

# Check status
git status [-s]

# Stage or add files
git add <files>

# List of ignore file in .gitignore

# See the differences
git diff [--staged]

# Commit
# [-a]: add all tracked files
# [-m]: add a message
# [-v]: choose commits on the go
git commit [-v] [-a]

# Remove a file out of staged area
git rm --cached <filename>

# Rename a file
git mv <oldname> <newname>

# See history
# [-p] [-num]: See details
# [--stat]: short report
# [--pretty]: format
# [--since = 2.weeks]: see recent changes
git log

# Discard changes (not yet staged)
git checkout -- <filename>

# REMOTE

# List remote repos
git remote -v

# Add a remote repo
git remote add <name> <url>

# Get data from remote
git fetch <remote-name>

# Get data and merge into local repo
git pull

# Push back to server repo
git push <server> <branch>

# Remove a remote repo
git remote rm <repo>

# Show the last commit
git show

# List all branches
git branch
[-r]: remote branches
# Make branch
git branch <branch name> <start-point>

# Delete branch
git branch -d <branch>
[-D]: Force delete

# Switch to branch
git checkout <branch>

# Create new branch and switch to it
git checkout -b <new> <start-point>

# Merge branchA into the current branch
git merge <branchA>

